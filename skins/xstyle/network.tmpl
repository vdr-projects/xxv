<?%
    USE date;
    statusfiles = {};

    FILTER null;
        fields = data.shift;

        timestamps = [];
        FOREACH row = data;
            iname = row.0.split(':').first;

            rxbytes.${iname} = [];
            txbytes.${iname} = [];
            rxerror.${iname} = [];
            txerror.${iname} = [];

            oldentry.${iname} = [];
        END;

        FOREACH row = data;
            IF ot != row.5;
             t = date.format(row.5, '%H:%M');
             timestamps.push(t);
             ot = row.5;
            END; 

                iname = row.0.split(':').first;

                UNLESS oldentry.${iname}.size;
                    oldentry.${iname} = row;
                END;

                bytes = row.1 - oldentry.${iname}.1;
                rxbytes.${iname}.push(bytes / (1024*1024));

                bytes = row.3 - oldentry.${iname}.3;
                txbytes.${iname}.push(bytes / (1024*1024));

                oldentry.${iname} = row;
        END;

        FOREACH iname = rxbytes.keys.sort;

            # Data ...
            d = [
                 timestamps,
                 rxbytes.${iname},
                 txbytes.${iname}
            ];

            USE my_graph = GD.Graph.lines(600,300);

            # Xsteps
            steps = timestamps.size div 5;
            label = gettext('Traffic on Interface');
            y_label = gettext('MB')
            label = "${label} ${iname} (${y_label})";
            my_graph.set(
                    title => label,
                    x_label_skip => steps,
                    x_long_ticks => 1,

                    y_long_ticks => 1,

                    line_width   => 2,
                    box_axis     => 1,
                    boxclr       => '#FFFFCC',
                    fgclr        => '#BBBBBB'
                    legend_placement => 'RD',
                    legend_spacing => 5,
            );
            my_graph.set_title_font(param.font,10);
            my_graph.set_y_label_font(param.font,10);
            my_graph.set_x_label_font(param.font,10);
            my_graph.set_x_axis_font(param.font,6);
            my_graph.set_y_axis_font(param.font,6);
            my_graph.set_legend( fields.1, fields.3);
            statusfiles.$iname = writefile("status_network_${iname}.png", my_graph.plot(d).gif );
        END;
    END;
 %?>
<!-- Vitals Template -->
<?% IF param.headingText %?>
<h3><?% param.headingText %?></h3>
<?% END %?>
<table border="0" width="95%">
        <?% FOREACH file = statusfiles.keys %?>
        <tr>
            <td colspan="<?% fields.size %?>" align=center>
                <img src="<?% statusfiles.$file %?>">
            </td>
        </tr>
        <?% END %?>
</table>
